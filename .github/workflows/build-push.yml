name: Build and push image

on:
  push:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      tag-latest:
        description: 'Tag as latest'
        required: false
        default: false
        type: boolean

concurrency:
  group: build-push-${{ github.ref_type }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.title }} image
    strategy:
      matrix:
        include:
          -
            title: Debian
            tag: ${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
            append-latest-tag: ${{ inputs.tag-latest && github.ref_type == 'tag' && ',ghcr.io/dtcooper/nginx-certbot-jinja:latest' || '' }}
            platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
          -
            title: Alpine
            tag: ${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}-alpine
            append-latest-tag: ${{ inputs.tag-latest && github.ref_type == 'tag' && ',ghcr.io/dtcooper/nginx-certbot-jinja:latest-alpine' || '' }}
            platforms: linux/amd64,linux/arm64
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: dtcooper
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build ${{ github.ref_type == 'tag' && 'and push' || 'only' }}
        uses: docker/build-push-action@v6
        with:
          pull: true
          push: ${{ github.ref_type == 'tag' && 'true' || 'false' }}
          platforms: ${{ matrix.platforms }}
          build-args: DOCKER_NGINX_CERTBOT_TAG=${{ matrix.tag }}
          tags: ghcr.io/dtcooper/nginx-certbot-jinja:${{ matrix.tag }}${{ matrix.append-latest-tag }}
